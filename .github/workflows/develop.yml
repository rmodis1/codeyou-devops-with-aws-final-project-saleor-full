name: Develop Pipeline

on:
  push:
    branches: [ develop ]

jobs:
  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Static Analysis
        working-directory: ./saleor-api
        run: |
          pip install ruff
          ruff check . || true
      
      - name: Dependency Check
        working-directory: ./saleor-api
        run: |
          pip install pip-audit
          pip-audit || true

  build-and-test:
    runs-on: ubuntu-latest
    needs: analyze
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Images
        run: |
          cd saleor-api && docker build -t saleor-api:develop .
          cd ../saleor-dashboard && docker build -t saleor-dashboard:develop .

      - name: Create test environment
        run: |
          docker network create saleor-network
          docker run -d --name postgres \
            --network saleor-network \
            -e POSTGRES_DB=saleor \
            -e POSTGRES_USER=saleor \
            -e POSTGRES_PASSWORD=saleor \
            postgres:13
          docker run -d --name redis \
            --network saleor-network \
            redis:6.2

      - name: Test API
        run: |
          docker run -d --name saleor-api \
            --network saleor-network \
            -e DEBUG=True \
            -e DATABASE_URL=postgres://saleor:saleor@postgres:5432/saleor \
            -e REDIS_URL=redis://redis:6379/0 \
            -e SECRET_KEY=testing123 \
            -p 8000:8000 \
            saleor-api:develop

      - name: API Health Check
        run: |
          sleep 45
          echo "Container logs:"
          docker logs saleor-api
          echo "Testing API health..."
          curl -v http://localhost:8000/health

      - name: Test Dashboard
        run: |
          docker run -d --name dashboard \
            -p 9000:80 \
            saleor-dashboard:develop
          sleep 20
          curl -v http://localhost:9000

      - name: Integration Test
        run: |
          docker compose up -d
          sleep 60
          curl -v http://localhost:8000/graphql
          curl -v http://localhost:9000

      - name: API Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'saleor-api:develop'
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Dashboard Security Scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'saleor-dashboard:develop'
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Push to DockerHub
        if: success()
        run: |
          docker tag saleor-api:develop ${{ secrets.DOCKER_USERNAME }}/saleor-api:develop
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor-api:develop
          docker tag saleor-dashboard:develop ${{ secrets.DOCKER_USERNAME }}/saleor-dashboard:develop
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor-dashboard:develop

      - name: Cleanup
        if: always()
        run: |
          docker compose down
          docker rm -f saleor-api postgres redis dashboard || true
          docker network rm saleor-network || true
