name: Production Pipeline

on:
  push:
    branches: [ production ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Create test environment
        run: |
          docker network create saleor-network
          docker run -d --name postgres \
            --network saleor-network \
            -e POSTGRES_DB=saleor \
            -e POSTGRES_USER=saleor \
            -e POSTGRES_PASSWORD=saleor \
            postgres:13
          docker run -d --name redis \
            --network saleor-network \
            redis:6.2

      - name: Build and Test API
        run: |
          cd saleor-api
          docker build -t saleor-api:production .
          docker run -d --name saleor-api \
            --network saleor-network \
            -e DEBUG=False \
            -e DATABASE_URL=postgres://saleor:saleor@postgres:5432/saleor \
            -e REDIS_URL=redis://redis:6379/0 \
            -e SECRET_KEY=production123 \
            -p 8000:8000 \
            saleor-api:production
          sleep 45
          curl -f http://localhost:8000/health || exit 1

      - name: Build and Test Dashboard
        run: |
          cd saleor-dashboard
          docker build -t saleor-dashboard:production .
          docker run -d --name dashboard \
            -p 9000:80 \
            saleor-dashboard:production
          sleep 20
          curl -f http://localhost:9000 || exit 1

      - name: Security Scan API
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'saleor-api:production'
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Security Scan Dashboard
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'saleor-dashboard:production'
          format: 'table'
          exit-code: '0'
          severity: 'CRITICAL,HIGH'

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Images to DockerHub
        run: |
          docker tag saleor-api:production ${{ secrets.DOCKER_USERNAME }}/saleor-api:production
          docker tag saleor-api:production ${{ secrets.DOCKER_USERNAME }}/saleor-api:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor-api:production
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor-api:latest
          
          docker tag saleor-dashboard:production ${{ secrets.DOCKER_USERNAME }}/saleor-dashboard:production
          docker tag saleor-dashboard:production ${{ secrets.DOCKER_USERNAME }}/saleor-dashboard:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor-dashboard:production
          docker push ${{ secrets.DOCKER_USERNAME }}/saleor-dashboard:latest

      - name: Cleanup
        if: always()
        run: |
          docker rm -f saleor-api dashboard postgres redis || true
          docker network rm saleor-network || true
